plugins{
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}


Properties properties = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
}

android {
    signingConfigs {
        release {
            storeFile file('../app/AssisriveTocheSignKey.jks')
            storePassword properties.getProperty("storePassword")
            keyAlias properties.getProperty("keyAlias")
            keyPassword properties.getProperty("keyPassword")
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "SmartButton-Release-${variant.versionName}.apk"
                }
            }
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    testOptions.unitTests.includeAndroidResources = true
    compileSdkVersion 31

    defaultConfig {
        applicationId "ir.amozkade.advancedAsisstiveTouche"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 58
        versionName '6.64'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
        signingConfig signingConfigs.release
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }


    flavorDimensions "defualt"
    productFlavors {
        website {
            resValue 'string', 'market_intent', '"NULL"'
            resValue 'string', 'market_package_name', '"NULL"'
            resValue 'string', 'store_name', '"NULL"'
            resValue 'string', 'RSA', '"NULL"'
            resValue 'string', 'server_client_id', properties.getProperty("serverClientId")
        }

        bazzar {
            resValue 'string', 'market_package_name', '"com.farsitel.bazaar"'
            resValue 'string', 'store_name', '"Cafe Bazaar"'
            resValue 'string', 'RSA', properties.getProperty("bazzarRSA")
            resValue 'string', 'server_client_id', properties.getProperty("serverClientId")
        }

        myket {
            resValue 'string', 'market_package_name', '"ir.mservices.market"'
            resValue 'string', 'store_name', '"Myket"'
            resValue 'string', 'RSA', properties.getProperty("myketRSA")
            resValue 'string', 'server_client_id', properties.getProperty("serverClientId")
        }

        playstore {
            resValue 'string', 'market_package_name', '"com.android.vending"'
            resValue 'string', 'store_name', '"Play Store"'
            resValue 'string', 'RSA', properties.getProperty("playStoreRSA")
            resValue 'string', 'server_client_id', properties.getProperty("serverClientId")
        }
    }

    buildTypes {
        release {
//            debuggable true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            minifyEnabled true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            testCoverageEnabled = false
        }
    }

    lintOptions {
        checkReleaseBuilds false
        //If you want to continue even if errors found use following line
        abortOnError true
        // for disable warn setId not found resource
        disable "ResourceType"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    def material = '1.5.0'
    implementation "com.google.android.material:material:$material"

    def androidx_support = '1.2.1'
    implementation "androidx.recyclerview:recyclerview:$androidx_support"

    def app_compat = '1.4.1'
    implementation "androidx.appcompat:appcompat:$app_compat"

    def constraint_layout = '2.1.3'
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"

    def lifecycle_extensions = '2.4.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_extensions"

    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

//
//    *********DO Not Update Retrofit and OkHttp - OkHttp above 3.12 crash app on api 16-21  **********
    def retrofit = "2.6.4"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.11.0'
//    *********DO Not Update Retrofit and OkHttp - OkHttp above 3.12 crash app on api 16-21  **********

    //region Project Dependencies
    implementation 'de.hdodenhof:circleimageview:3.0.2'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'com.github.samanzamani.persiandate:PersianDate:0.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.zarinpal:purchase:0.0.10'
    implementation 'com.smartarmenia:dotnetcoresignalrclientjava:1.14'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
    implementation 'com.github.DanielMartinus:Stepper-Touch:1.0.1'
    implementation 'com.jaredrummler:colorpicker:1.1.0'
    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation 'com.google.mlkit:translate:16.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.quiph.ui:recyclerviewfastscroller:1.0.0'
    implementation project(":Application Core")

    // Android Test
    def robolectric = '4.7.3'
    def junitVersion = '4.13.2'
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation 'org.mockito:mockito-core:2.23.4'

    // Navigation Dependencies
    def navigation = '2.4.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.activity:activity-ktx:1.4.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"

    // Room Dependencies
    def room_version = "2.4.1"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Test launch Activity And Fragment
    //Notice: Both testImplementation and debugImplementation is needed to run test in robolectric on release and debug
    def test_core_version = '1.4.0'
    testImplementation "androidx.test:core-ktx:$test_core_version"
    debugImplementation "androidx.test:core-ktx:$test_core_version"
    debugImplementation 'androidx.fragment:fragment-testing:1.4.1'

    //Hilt dependencies
    def hilt_version = '2.40.5'
    def hilt_life_cycle_version = '1.0.0'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:$hilt_life_cycle_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    //Hilt test dependencies
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
}